version: 2.1
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install
          command: npm install --ignore-engines
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./node_modules

  lint:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: lint
          command: npm run lint

  test:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: test
          command: npm run test
      - run:
          name: coverage
          command: npx codecov
          
  test-e2e:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
      - image: verdaccio/verdaccio:4
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
        name: npm-verbosity
        command: npm config set loglevel verbose --global
      - run:
          name: create-registry-user
          command: npx npm-auth-to-token@1.0.0 -u user -p password -e user@example.com -r http://0.0.0.0:4873
      - run:
          name: npm-set-registry
          command: npm set registry http://0.0.0.0:4873
      - run:
          name: npm-publish
          command: npm publish --verbose
      - run:
          name: install
          command: |
            mkdir ~/tmp-project
            cd ~/tmp-project
            npm init -y
            npm install security-report --verbose
            
  release:
    working_directory: ~/project
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: release
          command: npm run semantic-release

workflows:
  version: 2.1
  project:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - lint
      - test-e2e:
          requires:
            - test
      - release:
          filters:
            branches:
              only:
                - master
          requires:
            - test-e2e
